{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/objectWithoutPropertiesLoose\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/extends\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/inheritsLoose\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Glyphicon = _interopRequireDefault(require(\"./Glyphicon\"));\n\nvar _bootstrapUtils = require(\"./utils/bootstrapUtils\");\n\nvar defaultProps = {\n  bsRole: 'feedback'\n};\nvar contextTypes = {\n  $bs_formGroup: _propTypes.default.object\n};\n\nvar FormControlFeedback =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(FormControlFeedback, _React$Component);\n\n  function FormControlFeedback() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = FormControlFeedback.prototype;\n\n  _proto.getGlyph = function getGlyph(validationState) {\n    switch (validationState) {\n      case 'success':\n        return 'ok';\n\n      case 'warning':\n        return 'warning-sign';\n\n      case 'error':\n        return 'remove';\n\n      default:\n        return null;\n    }\n  };\n\n  _proto.renderDefaultFeedback = function renderDefaultFeedback(formGroup, className, classes, elementProps) {\n    var glyph = this.getGlyph(formGroup && formGroup.validationState);\n\n    if (!glyph) {\n      return null;\n    }\n\n    return _react.default.createElement(_Glyphicon.default, (0, _extends2.default)({}, elementProps, {\n      glyph: glyph,\n      className: (0, _classnames.default)(className, classes)\n    }));\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        children = _this$props.children,\n        props = (0, _objectWithoutPropertiesLoose2.default)(_this$props, [\"className\", \"children\"]);\n\n    var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),\n        bsProps = _splitBsProps[0],\n        elementProps = _splitBsProps[1];\n\n    var classes = (0, _bootstrapUtils.getClassSet)(bsProps);\n\n    if (!children) {\n      return this.renderDefaultFeedback(this.context.$bs_formGroup, className, classes, elementProps);\n    }\n\n    var child = _react.default.Children.only(children);\n\n    return _react.default.cloneElement(child, (0, _extends2.default)({}, elementProps, {\n      className: (0, _classnames.default)(child.props.className, className, classes)\n    }));\n  };\n\n  return FormControlFeedback;\n}(_react.default.Component);\n\nFormControlFeedback.defaultProps = defaultProps;\nFormControlFeedback.contextTypes = contextTypes;\n\nvar _default = (0, _bootstrapUtils.bsClass)('form-control-feedback', FormControlFeedback);\n\nexports.default = _default;\nmodule.exports = exports[\"default\"];","map":null,"metadata":{},"sourceType":"script"}