{"ast":null,"code":"import _classCallCheck from \"/home/rowen/cs452/stego_stuff/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/rowen/cs452/stego_stuff/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/rowen/cs452/stego_stuff/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/rowen/cs452/stego_stuff/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/rowen/cs452/stego_stuff/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/rowen/cs452/stego_stuff/src/Components/imageupload.js\";\n// Initial code from GitHub\n// https://gist.github.com/AshikNesin/e44b1950f6a24cfcd85330ffc1713513\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar ImageUpload =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ImageUpload, _Component);\n\n  function ImageUpload(props) {\n    var _this;\n\n    _classCallCheck(this, ImageUpload);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ImageUpload).call(this, props));\n    _this.state = {\n      message: ''\n    };\n    return _this;\n  }\n\n  _createClass(ImageUpload, [{\n    key: \"handleChange\",\n    value: function handleChange(file) {\n      if (!file.name.endsWith('.py')) {\n        this.setState({\n          message: 'Uploaded file was not a valid .py file.'\n        });\n        return;\n      }\n\n      this.props.startLoad();\n      var contents;\n      var callbackProp = this.props.callback;\n      var reader = new FileReader();\n      reader.readAsBinaryString(file);\n\n      reader.onloadend = function () {\n        contents = reader.result;\n        var request = new Request('/submissions', {\n          method: 'POST',\n          body: contents\n        });\n        fetch(request).then(function (response) {\n          if (!response.ok) {\n            throw new Error(response.status_text);\n          }\n\n          return response.json();\n        }).then(function (linterOutput) {\n          callbackProp(contents, linterOutput);\n        });\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var uploadButton = React.createElement(UploadButton, {\n        type: \"file\",\n        id: \"file\",\n        onChange: function onChange(e) {\n          return _this2.handleChange(e.target.files[0], _this2.props);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Instructions, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Begin by uploading your favorite Python file\"), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, uploadButton, \" Choose File\"), React.createElement(\"h1\", {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, this.state.message));\n    }\n  }]);\n\n  return ImageUpload;\n}(Component);\n\nImageUpload.propTypes = {\n  callback: PropTypes.func.isRequired,\n  startLoad: PropTypes.func.isRequired\n};\nexport default ImageUpload;","map":{"version":3,"sources":["/home/rowen/cs452/stego_stuff/src/Components/imageupload.js"],"names":["React","Component","PropTypes","ImageUpload","props","state","message","file","name","endsWith","setState","startLoad","contents","callbackProp","callback","reader","FileReader","readAsBinaryString","onloadend","result","request","Request","method","body","fetch","then","response","ok","Error","status_text","json","linterOutput","uploadButton","e","handleChange","target","files","propTypes","func","isRequired"],"mappings":";;;;;;AAAA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAEMC,W;;;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;AAGA,UAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAJiB;AAOlB;;;;iCAEYC,I,EAAM;AACjB,UAAI,CAACA,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAmB,KAAnB,CAAL,EAAgC;AAC9B,aAAKC,QAAL,CAAc;AAAEJ,UAAAA,OAAO,EAAE;AAAX,SAAd;AACA;AACD;;AAED,WAAKF,KAAL,CAAWO,SAAX;AACA,UAAIC,QAAJ;AACA,UAAMC,YAAY,GAAG,KAAKT,KAAL,CAAWU,QAAhC;AAGA,UAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,MAAAA,MAAM,CAACE,kBAAP,CAA0BV,IAA1B;;AACAQ,MAAAA,MAAM,CAACG,SAAP,GAAmB,YAAM;AACvBN,QAAAA,QAAQ,GAAGG,MAAM,CAACI,MAAlB;AAEA,YAAMC,OAAO,GAAG,IAAIC,OAAJ,CACd,cADc,EAEd;AACEC,UAAAA,MAAM,EAAE,MADV;AAEEC,UAAAA,IAAI,EAAEX;AAFR,SAFc,CAAhB;AAQAY,QAAAA,KAAK,CAACJ,OAAD,CAAL,CACGK,IADH,CACQ,UAACC,QAAD,EAAc;AAClB,cAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,kBAAM,IAAIC,KAAJ,CAAUF,QAAQ,CAACG,WAAnB,CAAN;AACD;;AACD,iBAAOH,QAAQ,CAACI,IAAT,EAAP;AACD,SANH,EAOGL,IAPH,CAOQ,UAACM,YAAD,EAAkB;AACtBlB,UAAAA,YAAY,CAACD,QAAD,EAAWmB,YAAX,CAAZ;AACD,SATH;AAUD,OArBD;AAsBD;;;6BAGQ;AAAA;;AACP,UAAMC,YAAY,GAAG,oBAAC,YAAD;AAAc,QAAA,IAAI,EAAC,MAAnB;AAA0B,QAAA,EAAE,EAAC,MAA7B;AAAoC,QAAA,QAAQ,EAAE,kBAAAC,CAAC;AAAA,iBAAI,MAAI,CAACC,YAAL,CAAkBD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAlB,EAAqC,MAAI,CAAChC,KAA1C,CAAJ;AAAA,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAArB;AAEA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG4B,YADH,iBAFF,EAKE;AAAI,QAAA,KAAK,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqB,KAAK3B,KAAL,CAAWC,OAAhC,CALF,CADF;AASD;;;;EA5DuBL,S;;AA+D1BE,WAAW,CAACkC,SAAZ,GAAwB;AACtBvB,EAAAA,QAAQ,EAAEZ,SAAS,CAACoC,IAAV,CAAeC,UADH;AAEtB5B,EAAAA,SAAS,EAAET,SAAS,CAACoC,IAAV,CAAeC;AAFJ,CAAxB;AAKA,eAAepC,WAAf","sourcesContent":["// Initial code from GitHub\n// https://gist.github.com/AshikNesin/e44b1950f6a24cfcd85330ffc1713513\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ImageUpload extends Component {\n  constructor(props) {\n    super(props);\n\n\n    this.state = {\n      message: '',\n    };\n  }\n\n  handleChange(file) {\n    if (!file.name.endsWith('.py')) {\n      this.setState({ message: 'Uploaded file was not a valid .py file.' });\n      return;\n    }\n\n    this.props.startLoad();\n    let contents;\n    const callbackProp = this.props.callback;\n\n\n    const reader = new FileReader();\n    reader.readAsBinaryString(file);\n    reader.onloadend = () => {\n      contents = reader.result;\n\n      const request = new Request(\n        '/submissions',\n        {\n          method: 'POST',\n          body: contents,\n        },\n      );\n\n      fetch(request)\n        .then((response) => {\n          if (!response.ok) {\n            throw new Error(response.status_text);\n          }\n          return response.json();\n        })\n        .then((linterOutput) => {\n          callbackProp(contents, linterOutput);\n        });\n    };\n  }\n\n\n  render() {\n    const uploadButton = <UploadButton type=\"file\" id=\"file\" onChange={e => this.handleChange(e.target.files[0], this.props)} />;\n\n    return (\n      <div>\n        <Instructions align=\"center\">Begin by uploading your favorite Python file</Instructions>\n        <Button>\n          {uploadButton} Choose File\n        </Button>\n        <h1 align=\"center\" >{this.state.message}</h1>\n      </div>\n    );\n  }\n}\n\nImageUpload.propTypes = {\n  callback: PropTypes.func.isRequired,\n  startLoad: PropTypes.func.isRequired,\n};\n\nexport default ImageUpload;\n"]},"metadata":{},"sourceType":"module"}